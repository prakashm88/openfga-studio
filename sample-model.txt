DSL Content for Model:
----------------------

model
  schema 1.1

type user

type group
  relations
    define member: [user]

type folder
  relations
    define can_create_file: owner
    define owner: [user]
    define parent: [folder]
    define viewer: [user, user:*, group#member] or owner or viewer from parent
    define tmpviewer: [user with non_expired_grant]

type doc
  relations
    define can_change_owner: owner
    define owner: [user]
    define parent: [folder]
    define can_read: viewer or owner or viewer from parent
    define can_share: owner or owner from parent
    define viewer: [user, user:*, group#member]
    define can_write: owner or owner from parent

condition non_expired_grant(current_time: timestamp, grant_time: timestamp, grant_duration: duration) {
  current_time < grant_time + grant_duration
}

JSON format of DSL content:
---------------------------
{
  "schema_version": "1.1",
  "type_definitions": [
    {
      "type": "user",
      "relations": {},
      "metadata": null
    },
    {
      "type": "group",
      "relations": {
        "member": {
          "this": {}
        }
      },
      "metadata": {
        "relations": {
          "member": {
            "directly_related_user_types": [
              {
                "type": "user"
              }
            ]
          }
        }
      }
    },
    {
      "type": "folder",
      "relations": {
        "can_create_file": {
          "computedUserset": {
            "relation": "owner"
          }
        },
        "owner": {
          "this": {}
        },
        "parent": {
          "this": {}
        },
        "viewer": {
          "union": {
            "child": [
              {
                "this": {}
              },
              {
                "computedUserset": {
                  "relation": "owner"
                }
              },
              {
                "tupleToUserset": {
                  "computedUserset": {
                    "relation": "viewer"
                  },
                  "tupleset": {
                    "relation": "parent"
                  }
                }
              }
            ]
          }
        },
        "tmpviewer": {
          "this": {}
        }
      },
      "metadata": {
        "relations": {
          "can_create_file": {
            "directly_related_user_types": []
          },
          "owner": {
            "directly_related_user_types": [
              {
                "type": "user"
              }
            ]
          },
          "parent": {
            "directly_related_user_types": [
              {
                "type": "folder"
              }
            ]
          },
          "viewer": {
            "directly_related_user_types": [
              {
                "type": "user"
              },
              {
                "type": "user",
                "wildcard": {}
              },
              {
                "type": "group",
                "relation": "member"
              }
            ]
          },
          "tmpviewer": {
            "directly_related_user_types": [
              {
                "type": "user",
                "condition": "non_expired_grant"
              }
            ]
          }
        }
      }
    },
    {
      "type": "doc",
      "relations": {
        "can_change_owner": {
          "computedUserset": {
            "relation": "owner"
          }
        },
        "owner": {
          "this": {}
        },
        "parent": {
          "this": {}
        },
        "can_read": {
          "union": {
            "child": [
              {
                "computedUserset": {
                  "relation": "viewer"
                }
              },
              {
                "computedUserset": {
                  "relation": "owner"
                }
              },
              {
                "tupleToUserset": {
                  "computedUserset": {
                    "relation": "viewer"
                  },
                  "tupleset": {
                    "relation": "parent"
                  }
                }
              }
            ]
          }
        },
        "can_share": {
          "union": {
            "child": [
              {
                "computedUserset": {
                  "relation": "owner"
                }
              },
              {
                "tupleToUserset": {
                  "computedUserset": {
                    "relation": "owner"
                  },
                  "tupleset": {
                    "relation": "parent"
                  }
                }
              }
            ]
          }
        },
        "viewer": {
          "this": {}
        },
        "can_write": {
          "union": {
            "child": [
              {
                "computedUserset": {
                  "relation": "owner"
                }
              },
              {
                "tupleToUserset": {
                  "computedUserset": {
                    "relation": "owner"
                  },
                  "tupleset": {
                    "relation": "parent"
                  }
                }
              }
            ]
          }
        }
      },
      "metadata": {
        "relations": {
          "can_change_owner": {
            "directly_related_user_types": []
          },
          "owner": {
            "directly_related_user_types": [
              {
                "type": "user"
              }
            ]
          },
          "parent": {
            "directly_related_user_types": [
              {
                "type": "folder"
              }
            ]
          },
          "can_read": {
            "directly_related_user_types": []
          },
          "can_share": {
            "directly_related_user_types": []
          },
          "viewer": {
            "directly_related_user_types": [
              {
                "type": "user"
              },
              {
                "type": "user",
                "wildcard": {}
              },
              {
                "type": "group",
                "relation": "member"
              }
            ]
          },
          "can_write": {
            "directly_related_user_types": []
          }
        }
      }
    }
  ],
  "conditions": {
    "non_expired_grant": {
      "name": "non_expired_grant",
      "expression": "current_time < grant_time + grant_duration",
      "parameters": {
        "current_time": {
          "type_name": "TYPE_NAME_TIMESTAMP"
        },
        "grant_time": {
          "type_name": "TYPE_NAME_TIMESTAMP"
        },
        "grant_duration": {
          "type_name": "TYPE_NAME_DURATION"
        }
      }
    }
  }
}